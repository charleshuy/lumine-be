@using Domain.Entities
@using Application.DTOs.ServiceDTO
@model Application.DTOs.UserDTO.ResponseUserDTO

@{
    ViewData["Title"] = "Chi tiết thợ makeup";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@await Html.PartialAsync("_UserSidebar")

<div class="container py-5">
    @await Html.PartialAsync("_Breadcrumb", new List<(string, string?)>
    {
    ("Lumine", Url.Action("Index", "Home")),
    ("Dịch vụ", Url.Action("Index", "Artists")),
    ("Thông tin", null)
    })

    <a href="@Url.Action("Index", "Artists")" class="text-decoration-none text-muted mb-4 d-inline-block fs-5">&lt; QUAY LẠI</a>

    <div class="row align-items-center">
        <div class="col-md-5">
            <div class="p-4 rounded shadow" style="background-color: #fff0f5;">
                <div class="d-flex align-items-center mb-3">
                    <img src="~/img/makeup-icon.png" alt="icon" style="width: 50px;" class="me-3" />
                    <div>
                        <h4 class="mb-0 artist-name">@($"{Model.FirstName} {Model.LastName}")</h4>
                        <small class="text-muted fs-6">Mã thợ: @Model.Id.ToString().Substring(0, 6)</small>
                    </div>
                </div>

                <ul class="list-unstyled lh-lg artist-info">
                    <li><strong>Tên:</strong> @($"{Model.FirstName} {Model.LastName}")</li>
                    <li><strong>Mã thợ:</strong> @Model.Id.ToString().Substring(0, 6)</li>
                    <li><strong>Tuổi:</strong> @(DateTime.Now.Year - Model.CreatedAt.Year)</li>
                    <li><strong>Kinh nghiệm:</strong> 7 năm trong ngành makeup chuyên nghiệp</li>
                    <li><strong>SĐT:</strong> <span class="text-danger fw-bold">@Model.PhoneNumber</span></li>
                </ul>

                <div class="mt-3">
                    <p class="fs-5"><strong>GIÁ BOOKING:</strong> <span class="fw-bold">300.000 VND</span></p>
                    <div class="d-flex gap-3">
                        <button class="btn btn-outline-dark rounded-pill px-4 fs-6">THÊM VÀO YÊU THÍCH</button>
                        <button class="btn btn-primary rounded-pill px-4 fs-6">ĐẶT LỊCH NGAY</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-7 text-center position-relative">
            <div class="position-relative mx-auto mb-4" style="width: 300px; height: 400px; overflow: hidden; border-radius: 50%;">
                <img src="@Model.ProfilePicture" alt="@Model.FirstName" class="img-fluid" style="object-fit: cover; width: 100%; height: 100%;">
            </div>

            <div class="mb-4">
                <span class="text-danger fs-3">
                    <i class="fas fa-star"></i>
                    <i class="fas fa-star"></i>
                    <i class="fas fa-star"></i>
                    <i class="fas fa-star"></i>
                    <i class="far fa-star"></i>
                </span>
            </div>

            
        </div>
    </div>
</div>

@{
    var services = ViewBag.Services as List<ResponseServiceDTO>;
}

@if (services != null && services.Any())
{
    <div class="mt-5">
        <h4 class="fw-bold mb-4 fs-3 text-center text-uppercase" style="color: #845EC2;">Dịch vụ của @Model.FirstName</h4>

        <div class="row row-cols-1 row-cols-md-2 g-4">
            @foreach (var service in services)
            {
                <div class="col">
                    <div class="card service-card border-0 shadow-sm h-100">
                        <div class="card-body d-flex flex-column justify-content-between">
                            <div>
                                <h5 class="card-title fw-bold text-dark">@service.ServiceName</h5>
                                <p class="card-text text-muted small">@service.ServiceDescription</p>
                            </div>
                            <div class="mt-3">
                                <p class="card-text text-danger fw-semibold">Giá: @string.Format("{0:N0} VND", service.Price)</p>
                                <span class="badge rounded-pill bg-@(service.Status == ServiceStatus.Available ? "success" : "secondary")">
                                    @service.Status
                                </span>
                                <button class="btn btn-outline-primary w-100 mt-3 rounded-pill fw-semibold" data-bs-toggle="modal" data-bs-target="#serviceModal-@service.Id">
                                    ĐẶT LỊCH
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Modal -->
                <div class="modal fade" id="serviceModal-@service.Id" tabindex="-1" aria-labelledby="serviceModalLabel-@service.Id" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered">
                        <div class="modal-content rounded-4 border-0">
                            <div class="modal-header bg-light border-bottom-0">
                                <h5 class="modal-title text-primary fw-bold" id="serviceModalLabel-@service.Id">@service.ServiceName</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body py-4">
                                <p><strong>Mô tả:</strong> @service.ServiceDescription</p>
                                <p><strong>Loại:</strong> @service.ServiceType?.Name</p>
                                <p><strong>Thời gian:</strong> @service.Duration</p>
                                <p class="fw-bold text-danger">Giá: @string.Format("{0:N0} VND", service.Price)</p>
                                <p>
                                    <strong>Trạng thái:</strong>
                                    <span class="badge rounded-pill bg-@(service.Status == ServiceStatus.Available ? "success" : "secondary")">@service.Status</span>
                                </p>
                                <div class="mb-3">
                                    <label class="form-label fw-semibold">Chọn thời gian bắt đầu:</label>
                                    <input type="datetime-local" class="form-control" id="startTime-@service.Id" />
                                </div>
                            </div>
                            <div class="modal-footer border-top-0">
                                <span class="text-danger me-auto small" id="error-@service.Id"></span>
                                <button class="btn btn-outline-secondary rounded-pill px-4" data-bs-dismiss="modal">Hủy</button>
                                <button class="btn btn-primary rounded-pill px-4" onclick="bookService('@service.Id', '@service.Duration.TotalMinutes')">Xác nhận</button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

}
else
{
    <div class="mt-5">
        <h5 class="text-muted fs-5">Hiện tại chưa có dịch vụ nào.</h5>
    </div>
}


<style>
    body {
        background: linear-gradient(to bottom, #ffe6f0 0%, #ffffff 100%);
    }

    .btn-primary {
        background-color: #845EC2;
        border-color: #845EC2;
    }

        .btn-primary:hover {
            background-color: #6f4db2;
            border-color: #6f4db2;
        }

    .artist-name {
        font-size: 1.75rem;
        font-weight: 700;
    }

    .artist-info li {
        font-size: 1.1rem;
    }

    .service-info p,
    .service-info .badge {
        font-size: 1.05rem;
    }

    .service-title {
        font-size: 1.4rem;
    }

    .service-card {
        background-color: #fff7fb;
        border-radius: 1.5rem;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .service-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(132, 94, 194, 0.15);
        }

    .modal-content {
        background: #fff0f7;
        border-radius: 1.5rem;
    }

    .modal-title {
        color: #845EC2;
    }

    .btn-primary {
        background-color: #845EC2;
        border-color: #845EC2;
    }

        .btn-primary:hover {
            background-color: #6f4db2;
            border-color: #6f4db2;
        }

    .btn-outline-primary:hover {
        background-color: #f3e4ff;
        color: #845EC2;
        border-color: #845EC2;
    }

</style>


<script>
    function getCookie(name) {
        const value = `; ${document.cookie}`;
        const parts = value.split(`; ${name}=`);
        if (parts.length === 2) return parts.pop().split(';').shift();
        return null;
    }

    async function bookService(serviceId, durationMinutes) {
        const startInput = document.getElementById(`startTime-${serviceId}`);
        const errorLabel = document.getElementById(`error-${serviceId}`);
        const startTime = new Date(startInput.value);

        if (!startInput.value) {
            errorLabel.textContent = "Vui lòng chọn thời gian bắt đầu.";
            return;
        }

        const endTime = new Date(startTime.getTime() + durationMinutes * 60000);

        const bookingData = {
            serviceID: serviceId,
            startTime: startTime.toISOString()
        };

        const token = getCookie("TokenString");
        const baseUrl = window.appConfig.apiBaseUrl;

        try {
            const response = await fetch(`${baseUrl}/Booking/customer`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${token}`
                },
                body: JSON.stringify(bookingData)
            });

            if (response.ok) {
                alert("Đặt lịch thành công!");
                window.location.reload();
            } else {
                const error = await response.text();
                errorLabel.textContent = `Lỗi: ${error}`;
            }
        } catch (err) {
            errorLabel.textContent = `Lỗi hệ thống: ${err.message}`;
        }
    }
</script>


